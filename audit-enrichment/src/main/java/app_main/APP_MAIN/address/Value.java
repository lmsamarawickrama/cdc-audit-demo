/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package app_main.APP_MAIN.address;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -220664792842718843L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"app_main.APP_MAIN.address\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"customer_id\",\"type\":\"long\"},{\"name\":\"address_type\",\"type\":\"string\"},{\"name\":\"address_line1\",\"type\":\"string\"},{\"name\":\"address_line2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"postal_code\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"created_date\",\"type\":{\"type\":\"string\",\"connect.version\":1,\"connect.default\":\"1970-01-01T00:00:00Z\",\"connect.name\":\"io.debezium.time.ZonedTimestamp\"},\"default\":\"1970-01-01T00:00:00Z\"},{\"name\":\"modified_date\",\"type\":{\"type\":\"string\",\"connect.version\":1,\"connect.default\":\"1970-01-01T00:00:00Z\",\"connect.name\":\"io.debezium.time.ZonedTimestamp\"},\"default\":\"1970-01-01T00:00:00Z\"},{\"name\":\"modified_by\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"record_status\",\"type\":{\"type\":\"string\",\"connect.default\":\"Active\"},\"default\":\"Active\"},{\"name\":\"correlation_id\",\"type\":[\"null\",\"string\"],\"default\":null}],\"connect.name\":\"app_main.APP_MAIN.address.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Value> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Value to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Value from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Value instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long id;
   private long customer_id;
   private java.lang.CharSequence address_type;
   private java.lang.CharSequence address_line1;
   private java.lang.CharSequence address_line2;
   private java.lang.CharSequence city;
   private java.lang.CharSequence postal_code;
   private java.lang.CharSequence country;
   private java.lang.CharSequence created_date;
   private java.lang.CharSequence modified_date;
   private java.lang.CharSequence modified_by;
   private java.lang.CharSequence record_status;
   private java.lang.CharSequence correlation_id;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param customer_id The new value for customer_id
   * @param address_type The new value for address_type
   * @param address_line1 The new value for address_line1
   * @param address_line2 The new value for address_line2
   * @param city The new value for city
   * @param postal_code The new value for postal_code
   * @param country The new value for country
   * @param created_date The new value for created_date
   * @param modified_date The new value for modified_date
   * @param modified_by The new value for modified_by
   * @param record_status The new value for record_status
   * @param correlation_id The new value for correlation_id
   */
  public Value(java.lang.Long id, java.lang.Long customer_id, java.lang.CharSequence address_type, java.lang.CharSequence address_line1, java.lang.CharSequence address_line2, java.lang.CharSequence city, java.lang.CharSequence postal_code, java.lang.CharSequence country, java.lang.CharSequence created_date, java.lang.CharSequence modified_date, java.lang.CharSequence modified_by, java.lang.CharSequence record_status, java.lang.CharSequence correlation_id) {
    this.id = id;
    this.customer_id = customer_id;
    this.address_type = address_type;
    this.address_line1 = address_line1;
    this.address_line2 = address_line2;
    this.city = city;
    this.postal_code = postal_code;
    this.country = country;
    this.created_date = created_date;
    this.modified_date = modified_date;
    this.modified_by = modified_by;
    this.record_status = record_status;
    this.correlation_id = correlation_id;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return customer_id;
    case 2: return address_type;
    case 3: return address_line1;
    case 4: return address_line2;
    case 5: return city;
    case 6: return postal_code;
    case 7: return country;
    case 8: return created_date;
    case 9: return modified_date;
    case 10: return modified_by;
    case 11: return record_status;
    case 12: return correlation_id;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: customer_id = (java.lang.Long)value$; break;
    case 2: address_type = (java.lang.CharSequence)value$; break;
    case 3: address_line1 = (java.lang.CharSequence)value$; break;
    case 4: address_line2 = (java.lang.CharSequence)value$; break;
    case 5: city = (java.lang.CharSequence)value$; break;
    case 6: postal_code = (java.lang.CharSequence)value$; break;
    case 7: country = (java.lang.CharSequence)value$; break;
    case 8: created_date = (java.lang.CharSequence)value$; break;
    case 9: modified_date = (java.lang.CharSequence)value$; break;
    case 10: modified_by = (java.lang.CharSequence)value$; break;
    case 11: record_status = (java.lang.CharSequence)value$; break;
    case 12: correlation_id = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'customer_id' field.
   * @return The value of the 'customer_id' field.
   */
  public long getCustomerId() {
    return customer_id;
  }


  /**
   * Sets the value of the 'customer_id' field.
   * @param value the value to set.
   */
  public void setCustomerId(long value) {
    this.customer_id = value;
  }

  /**
   * Gets the value of the 'address_type' field.
   * @return The value of the 'address_type' field.
   */
  public java.lang.CharSequence getAddressType() {
    return address_type;
  }


  /**
   * Sets the value of the 'address_type' field.
   * @param value the value to set.
   */
  public void setAddressType(java.lang.CharSequence value) {
    this.address_type = value;
  }

  /**
   * Gets the value of the 'address_line1' field.
   * @return The value of the 'address_line1' field.
   */
  public java.lang.CharSequence getAddressLine1() {
    return address_line1;
  }


  /**
   * Sets the value of the 'address_line1' field.
   * @param value the value to set.
   */
  public void setAddressLine1(java.lang.CharSequence value) {
    this.address_line1 = value;
  }

  /**
   * Gets the value of the 'address_line2' field.
   * @return The value of the 'address_line2' field.
   */
  public java.lang.CharSequence getAddressLine2() {
    return address_line2;
  }


  /**
   * Sets the value of the 'address_line2' field.
   * @param value the value to set.
   */
  public void setAddressLine2(java.lang.CharSequence value) {
    this.address_line2 = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }


  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'postal_code' field.
   * @return The value of the 'postal_code' field.
   */
  public java.lang.CharSequence getPostalCode() {
    return postal_code;
  }


  /**
   * Sets the value of the 'postal_code' field.
   * @param value the value to set.
   */
  public void setPostalCode(java.lang.CharSequence value) {
    this.postal_code = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }


  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'created_date' field.
   * @return The value of the 'created_date' field.
   */
  public java.lang.CharSequence getCreatedDate() {
    return created_date;
  }


  /**
   * Sets the value of the 'created_date' field.
   * @param value the value to set.
   */
  public void setCreatedDate(java.lang.CharSequence value) {
    this.created_date = value;
  }

  /**
   * Gets the value of the 'modified_date' field.
   * @return The value of the 'modified_date' field.
   */
  public java.lang.CharSequence getModifiedDate() {
    return modified_date;
  }


  /**
   * Sets the value of the 'modified_date' field.
   * @param value the value to set.
   */
  public void setModifiedDate(java.lang.CharSequence value) {
    this.modified_date = value;
  }

  /**
   * Gets the value of the 'modified_by' field.
   * @return The value of the 'modified_by' field.
   */
  public java.lang.CharSequence getModifiedBy() {
    return modified_by;
  }


  /**
   * Sets the value of the 'modified_by' field.
   * @param value the value to set.
   */
  public void setModifiedBy(java.lang.CharSequence value) {
    this.modified_by = value;
  }

  /**
   * Gets the value of the 'record_status' field.
   * @return The value of the 'record_status' field.
   */
  public java.lang.CharSequence getRecordStatus() {
    return record_status;
  }


  /**
   * Sets the value of the 'record_status' field.
   * @param value the value to set.
   */
  public void setRecordStatus(java.lang.CharSequence value) {
    this.record_status = value;
  }

  /**
   * Gets the value of the 'correlation_id' field.
   * @return The value of the 'correlation_id' field.
   */
  public java.lang.CharSequence getCorrelationId() {
    return correlation_id;
  }


  /**
   * Sets the value of the 'correlation_id' field.
   * @param value the value to set.
   */
  public void setCorrelationId(java.lang.CharSequence value) {
    this.correlation_id = value;
  }

  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static app_main.APP_MAIN.address.Value.Builder newBuilder() {
    return new app_main.APP_MAIN.address.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static app_main.APP_MAIN.address.Value.Builder newBuilder(app_main.APP_MAIN.address.Value.Builder other) {
    if (other == null) {
      return new app_main.APP_MAIN.address.Value.Builder();
    } else {
      return new app_main.APP_MAIN.address.Value.Builder(other);
    }
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static app_main.APP_MAIN.address.Value.Builder newBuilder(app_main.APP_MAIN.address.Value other) {
    if (other == null) {
      return new app_main.APP_MAIN.address.Value.Builder();
    } else {
      return new app_main.APP_MAIN.address.Value.Builder(other);
    }
  }

  /**
   * RecordBuilder for Value instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private long id;
    private long customer_id;
    private java.lang.CharSequence address_type;
    private java.lang.CharSequence address_line1;
    private java.lang.CharSequence address_line2;
    private java.lang.CharSequence city;
    private java.lang.CharSequence postal_code;
    private java.lang.CharSequence country;
    private java.lang.CharSequence created_date;
    private java.lang.CharSequence modified_date;
    private java.lang.CharSequence modified_by;
    private java.lang.CharSequence record_status;
    private java.lang.CharSequence correlation_id;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(app_main.APP_MAIN.address.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[1].schema(), other.customer_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.address_type)) {
        this.address_type = data().deepCopy(fields()[2].schema(), other.address_type);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.address_line1)) {
        this.address_line1 = data().deepCopy(fields()[3].schema(), other.address_line1);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.address_line2)) {
        this.address_line2 = data().deepCopy(fields()[4].schema(), other.address_line2);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.postal_code)) {
        this.postal_code = data().deepCopy(fields()[6].schema(), other.postal_code);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.country)) {
        this.country = data().deepCopy(fields()[7].schema(), other.country);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.created_date)) {
        this.created_date = data().deepCopy(fields()[8].schema(), other.created_date);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.modified_date)) {
        this.modified_date = data().deepCopy(fields()[9].schema(), other.modified_date);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.modified_by)) {
        this.modified_by = data().deepCopy(fields()[10].schema(), other.modified_by);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.record_status)) {
        this.record_status = data().deepCopy(fields()[11].schema(), other.record_status);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[12].schema(), other.correlation_id);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(app_main.APP_MAIN.address.Value other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.customer_id)) {
        this.customer_id = data().deepCopy(fields()[1].schema(), other.customer_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address_type)) {
        this.address_type = data().deepCopy(fields()[2].schema(), other.address_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address_line1)) {
        this.address_line1 = data().deepCopy(fields()[3].schema(), other.address_line1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.address_line2)) {
        this.address_line2 = data().deepCopy(fields()[4].schema(), other.address_line2);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.postal_code)) {
        this.postal_code = data().deepCopy(fields()[6].schema(), other.postal_code);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.country)) {
        this.country = data().deepCopy(fields()[7].schema(), other.country);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.created_date)) {
        this.created_date = data().deepCopy(fields()[8].schema(), other.created_date);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.modified_date)) {
        this.modified_date = data().deepCopy(fields()[9].schema(), other.modified_date);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.modified_by)) {
        this.modified_by = data().deepCopy(fields()[10].schema(), other.modified_by);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.record_status)) {
        this.record_status = data().deepCopy(fields()[11].schema(), other.record_status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.correlation_id)) {
        this.correlation_id = data().deepCopy(fields()[12].schema(), other.correlation_id);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_id' field.
      * @return The value.
      */
    public long getCustomerId() {
      return customer_id;
    }


    /**
      * Sets the value of the 'customer_id' field.
      * @param value The value of 'customer_id'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setCustomerId(long value) {
      validate(fields()[1], value);
      this.customer_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_id' field has been set.
      * @return True if the 'customer_id' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'customer_id' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearCustomerId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddressType() {
      return address_type;
    }


    /**
      * Sets the value of the 'address_type' field.
      * @param value The value of 'address_type'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setAddressType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.address_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'address_type' field has been set.
      * @return True if the 'address_type' field has been set, false otherwise.
      */
    public boolean hasAddressType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'address_type' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearAddressType() {
      address_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'address_line1' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddressLine1() {
      return address_line1;
    }


    /**
      * Sets the value of the 'address_line1' field.
      * @param value The value of 'address_line1'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setAddressLine1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.address_line1 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'address_line1' field has been set.
      * @return True if the 'address_line1' field has been set, false otherwise.
      */
    public boolean hasAddressLine1() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'address_line1' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearAddressLine1() {
      address_line1 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'address_line2' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddressLine2() {
      return address_line2;
    }


    /**
      * Sets the value of the 'address_line2' field.
      * @param value The value of 'address_line2'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setAddressLine2(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.address_line2 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'address_line2' field has been set.
      * @return True if the 'address_line2' field has been set, false otherwise.
      */
    public boolean hasAddressLine2() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'address_line2' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearAddressLine2() {
      address_line2 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return city;
    }


    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.city = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearCity() {
      city = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'postal_code' field.
      * @return The value.
      */
    public java.lang.CharSequence getPostalCode() {
      return postal_code;
    }


    /**
      * Sets the value of the 'postal_code' field.
      * @param value The value of 'postal_code'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setPostalCode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.postal_code = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'postal_code' field has been set.
      * @return True if the 'postal_code' field has been set, false otherwise.
      */
    public boolean hasPostalCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'postal_code' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearPostalCode() {
      postal_code = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountry() {
      return country;
    }


    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.country = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearCountry() {
      country = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_date' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedDate() {
      return created_date;
    }


    /**
      * Sets the value of the 'created_date' field.
      * @param value The value of 'created_date'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setCreatedDate(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.created_date = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'created_date' field has been set.
      * @return True if the 'created_date' field has been set, false otherwise.
      */
    public boolean hasCreatedDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'created_date' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearCreatedDate() {
      created_date = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'modified_date' field.
      * @return The value.
      */
    public java.lang.CharSequence getModifiedDate() {
      return modified_date;
    }


    /**
      * Sets the value of the 'modified_date' field.
      * @param value The value of 'modified_date'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setModifiedDate(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.modified_date = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'modified_date' field has been set.
      * @return True if the 'modified_date' field has been set, false otherwise.
      */
    public boolean hasModifiedDate() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'modified_date' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearModifiedDate() {
      modified_date = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'modified_by' field.
      * @return The value.
      */
    public java.lang.CharSequence getModifiedBy() {
      return modified_by;
    }


    /**
      * Sets the value of the 'modified_by' field.
      * @param value The value of 'modified_by'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setModifiedBy(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.modified_by = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'modified_by' field has been set.
      * @return True if the 'modified_by' field has been set, false otherwise.
      */
    public boolean hasModifiedBy() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'modified_by' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearModifiedBy() {
      modified_by = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'record_status' field.
      * @return The value.
      */
    public java.lang.CharSequence getRecordStatus() {
      return record_status;
    }


    /**
      * Sets the value of the 'record_status' field.
      * @param value The value of 'record_status'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setRecordStatus(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.record_status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'record_status' field has been set.
      * @return True if the 'record_status' field has been set, false otherwise.
      */
    public boolean hasRecordStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'record_status' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearRecordStatus() {
      record_status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'correlation_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getCorrelationId() {
      return correlation_id;
    }


    /**
      * Sets the value of the 'correlation_id' field.
      * @param value The value of 'correlation_id'.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder setCorrelationId(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.correlation_id = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'correlation_id' field has been set.
      * @return True if the 'correlation_id' field has been set, false otherwise.
      */
    public boolean hasCorrelationId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'correlation_id' field.
      * @return This builder.
      */
    public app_main.APP_MAIN.address.Value.Builder clearCorrelationId() {
      correlation_id = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.customer_id = fieldSetFlags()[1] ? this.customer_id : (java.lang.Long) defaultValue(fields()[1]);
        record.address_type = fieldSetFlags()[2] ? this.address_type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.address_line1 = fieldSetFlags()[3] ? this.address_line1 : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.address_line2 = fieldSetFlags()[4] ? this.address_line2 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.city = fieldSetFlags()[5] ? this.city : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.postal_code = fieldSetFlags()[6] ? this.postal_code : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.country = fieldSetFlags()[7] ? this.country : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.created_date = fieldSetFlags()[8] ? this.created_date : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.modified_date = fieldSetFlags()[9] ? this.modified_date : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.modified_by = fieldSetFlags()[10] ? this.modified_by : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.record_status = fieldSetFlags()[11] ? this.record_status : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.correlation_id = fieldSetFlags()[12] ? this.correlation_id : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.id);

    out.writeLong(this.customer_id);

    out.writeString(this.address_type);

    out.writeString(this.address_line1);

    if (this.address_line2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.address_line2);
    }

    out.writeString(this.city);

    out.writeString(this.postal_code);

    out.writeString(this.country);

    out.writeString(this.created_date);

    out.writeString(this.modified_date);

    if (this.modified_by == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.modified_by);
    }

    out.writeString(this.record_status);

    if (this.correlation_id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.correlation_id);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readLong();

      this.customer_id = in.readLong();

      this.address_type = in.readString(this.address_type instanceof Utf8 ? (Utf8)this.address_type : null);

      this.address_line1 = in.readString(this.address_line1 instanceof Utf8 ? (Utf8)this.address_line1 : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.address_line2 = null;
      } else {
        this.address_line2 = in.readString(this.address_line2 instanceof Utf8 ? (Utf8)this.address_line2 : null);
      }

      this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);

      this.postal_code = in.readString(this.postal_code instanceof Utf8 ? (Utf8)this.postal_code : null);

      this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);

      this.created_date = in.readString(this.created_date instanceof Utf8 ? (Utf8)this.created_date : null);

      this.modified_date = in.readString(this.modified_date instanceof Utf8 ? (Utf8)this.modified_date : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.modified_by = null;
      } else {
        this.modified_by = in.readString(this.modified_by instanceof Utf8 ? (Utf8)this.modified_by : null);
      }

      this.record_status = in.readString(this.record_status instanceof Utf8 ? (Utf8)this.record_status : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.correlation_id = null;
      } else {
        this.correlation_id = in.readString(this.correlation_id instanceof Utf8 ? (Utf8)this.correlation_id : null);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readLong();
          break;

        case 1:
          this.customer_id = in.readLong();
          break;

        case 2:
          this.address_type = in.readString(this.address_type instanceof Utf8 ? (Utf8)this.address_type : null);
          break;

        case 3:
          this.address_line1 = in.readString(this.address_line1 instanceof Utf8 ? (Utf8)this.address_line1 : null);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.address_line2 = null;
          } else {
            this.address_line2 = in.readString(this.address_line2 instanceof Utf8 ? (Utf8)this.address_line2 : null);
          }
          break;

        case 5:
          this.city = in.readString(this.city instanceof Utf8 ? (Utf8)this.city : null);
          break;

        case 6:
          this.postal_code = in.readString(this.postal_code instanceof Utf8 ? (Utf8)this.postal_code : null);
          break;

        case 7:
          this.country = in.readString(this.country instanceof Utf8 ? (Utf8)this.country : null);
          break;

        case 8:
          this.created_date = in.readString(this.created_date instanceof Utf8 ? (Utf8)this.created_date : null);
          break;

        case 9:
          this.modified_date = in.readString(this.modified_date instanceof Utf8 ? (Utf8)this.modified_date : null);
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.modified_by = null;
          } else {
            this.modified_by = in.readString(this.modified_by instanceof Utf8 ? (Utf8)this.modified_by : null);
          }
          break;

        case 11:
          this.record_status = in.readString(this.record_status instanceof Utf8 ? (Utf8)this.record_status : null);
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.correlation_id = null;
          } else {
            this.correlation_id = in.readString(this.correlation_id instanceof Utf8 ? (Utf8)this.correlation_id : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










